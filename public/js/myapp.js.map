{"version":3,"file":"/js/myapp.js","mappings":"2EACAA,OAAOC,EAAIC,EAAQ,KAQnB,IACIF,OAAOG,EAAIH,OAAOI,OAASF,EAAQ,KACrC,MAAOG,IAQTL,OAAOM,MAAQJ,EAAQ,KAEvBF,OAAOM,MAAMC,SAASC,QAAQC,OAAO,oBAAsB,iBAQ3D,IAAIC,EAAQC,SAASC,KAAKC,cAAc,2BAEpCH,EACAV,OAAOM,MAAMC,SAASC,QAAQC,OAAO,gBAAkBC,EAAMI,QAE7DC,QAAQC,MAAM,0E,oBC3BlBd,EAAQ,KAERF,OAAOiB,IAAMf,EAAQ,KAqBT,IAAIe,IAAI,CAClBC,GAAI,U,6CC/BNC,EAAOC,QAAUH,K,6BCAjB,GAAqB,oBAAXb,OAAwB,CAAE,IAAIC,EAAI,IAAIgB,MAAM,+BAA6D,MAA7BhB,EAAEiB,KAAO,mBAA0BjB,EAEzHc,EAAOC,QAAUhB,S","sources":["webpack:///./resources/js/bootstrap.js","webpack:///./resources/js/myapp.js","webpack:///external var \"Vue\"","webpack:///external var \"jQuery\""],"sourcesContent":["\nwindow._ = require('lodash')\n\n/**\n * We'll load jQuery and the Bootstrap jQuery plugin which provides support\n * for JavaScript based Bootstrap features such as modals and tabs. This\n * code may be modified to fit the specific needs of your application.\n */\n\ntry {\n    window.$ = window.jQuery = require('jquery')\n} catch (e) {}\n\n/**\n * We'll load the axios HTTP library which allows us to easily issue requests\n * to our Laravel back-end. This library automatically handles sending the\n * CSRF token as a header based on the value of the \"XSRF\" token cookie.\n */\n\nwindow.axios = require('axios')\n\nwindow.axios.defaults.headers.common['X-Requested-With'] = 'XMLHttpRequest'\n\n/**\n * Next we will register the CSRF Token as a common header with Axios so that\n * all outgoing HTTP requests automatically have it attached. This is just\n * a simple convenience so we don't have to attach every token manually.\n */\n\nlet token = document.head.querySelector('meta[name=\"csrf-token\"]')\n\nif (token) {\n    window.axios.defaults.headers.common['X-CSRF-TOKEN'] = token.content\n} else {\n    console.error('CSRF token not found: https://laravel.com/docs/csrf#csrf-x-csrf-token')\n}\n\n/**\n * Echo exposes an expressive API for subscribing to channels and listening\n * for events that are broadcast by Laravel. Echo and event broadcasting\n * allows your team to easily build robust real-time web applications.\n */\n\n// import Echo from 'laravel-echo'\n\n// window.Pusher = require('pusher-js');\n\n// window.Echo = new Echo({\n//     broadcaster: 'pusher',\n//     key: process.env.MIX_PUSHER_APP_KEY,\n//     cluster: process.env.MIX_PUSHER_APP_CLUSTER,\n//     encrypted: true\n// });\n","\n/**\n * First we will load all of this project's JavaScript dependencies which\n * includes Vue and other libraries. It is a great starting point when\n * building robust, powerful web applications using Vue and Laravel.\n */\n\nrequire('./bootstrap')\n\nwindow.Vue = require('vue')\n\n/**\n * The following block of code may be used to automatically register your\n * Vue components. It will recursively scan this directory for the Vue\n * components and automatically register them with their \"basename\".\n *\n * Eg. ./components/ExampleComponent.vue -> <example-component></example-component>\n */\n\n// const files = require.context('./', true, /\\.vue$/i)\n// files.keys().map(key => Vue.component(key.split('/').pop().split('.')[0], files(key)))\n\n// Vue.component('example-component', require('./components/ExampleComponent.vue'))\n\n/**\n * Next, we will create a fresh Vue application instance and attach it to\n * the page. Then, you may begin adding components to this application\n * or customize the JavaScript scaffolding to fit your unique needs.\n */\n\nconst app = new Vue({\n  el: '#app'\n})\n","module.exports = Vue;","if(typeof jQuery === 'undefined') { var e = new Error(\"Cannot find module 'jQuery'\"); e.code = 'MODULE_NOT_FOUND'; throw e; }\n\nmodule.exports = jQuery;"],"names":["window","_","require","$","jQuery","e","axios","defaults","headers","common","token","document","head","querySelector","content","console","error","Vue","el","module","exports","Error","code"],"sourceRoot":""}